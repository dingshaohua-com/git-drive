/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Server API
 * ## Git Drive 接口文档

  这是一个基于 Koa + TSOA 的后端 API 服务
 * OpenAPI spec version: 1.0.0
 */
import type {
  JsonResultTypeAny,
  JsonResultTypeTokenStringMeUser,
  LoginParams
} from '../model';

import { customAxiosInstance } from '../api.base';



type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];


  /**
 * 支持多种登录方式。   
首次登录请用邮箱验证码登录方式，进去之后再设置密码，以后便可以用账密方式登录了！

| 登录方式 | 字段 | 说明 |
|----------|----------|------|
| 账号密码 | username, password | 账密登录 |
| 邮箱验证码 | email, code | 邮箱 + 验证码登录 |
 * @summary 登录
 */
export const login = (
    loginParams: LoginParams,
 options?: SecondParameter<typeof customAxiosInstance>,) => {
      return customAxiosInstance<JsonResultTypeTokenStringMeUser>(
      {url: `/api/login`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: loginParams
    },
      options);
    }
  /**
 * 退出登录
 * @summary 登出
 */
export const logout = (
    
 options?: SecondParameter<typeof customAxiosInstance>,) => {
      return customAxiosInstance<JsonResultTypeAny>(
      {url: `/api/logout`, method: 'POST'
    },
      options);
    }
  /**
 * 发送证码 接口
 * @summary 发送证码
 */
export const sendCode = (
    rootSendCodeBody: unknown,
 options?: SecondParameter<typeof customAxiosInstance>,) => {
      return customAxiosInstance<JsonResultTypeAny>(
      {url: `/api/send-code`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: rootSendCodeBody
    },
      options);
    }
  export type Login = NonNullable<Awaited<ReturnType<typeof login>>>
export type Logout = NonNullable<Awaited<ReturnType<typeof logout>>>
export type SendCode = NonNullable<Awaited<ReturnType<typeof sendCode>>>
